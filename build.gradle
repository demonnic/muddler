/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3/userguide/tutorial_groovy_projects.html
 */

plugins {
  id 'groovy'
  id 'application'
  id 'maven'

  // Shadow jar plugin for creating the uberjar    
  id 'com.github.johnrengelman.shadow' version '5.0.0'

}

mainClassName = "muddler.App"

repositories {
  jcenter()
}

dependencies {
  implementation 'org.codehaus.groovy:groovy-all:3.0.8'
}

// this feels like a lot to not repeat the version, but by Jove I'm doing it anyway!
task generateGroovy(type: Copy) {
  def templateContext = [version: project.version]
  inputs.properties templateContext // for gradle up-to-date check
  from "src/template/groovy/"
  into "$buildDir/generated/groovy"
  expand templateContext
}
// add the generated files to the srcDir and ensure they're generated before compileGroovy
sourceSets.main.groovy.srcDir "$buildDir/generated/groovy"
compileGroovy.dependsOn generateGroovy

task dockerImage(type:Exec, dependsOn: ['clean', 'shadowJar']) {
  commandLine 'docker', 'build', '-t', "demonnic/muddler:$version", '.'
}

task dockerTest(type:Exec, dependsOn: ['clean', 'shadowJar']) {
  commandLine 'docker', 'build', '-t', "demonnic/muddler:test", '.'
}

task dockerLatest(type:Exec, dependsOn: ['clean', 'shadowJar']) {
  commandLine 'docker', 'build', '-t', "demonnic/muddler:latest", '.'
}

task mpackage(type:Exec, dependsOn: ['clean', 'shadowJar']) {
  def jar = "../build/libs/muddle-$version-all.jar"
  workingDir = "./mpackage"
  commandLine 'java', '-jar', jar
}

task muddle(dependsOn: ['clean', 'shadowDistZip', 'shadowDistTar', 'dockerImage', 'dockerLatest', 'dockerTest', 'mpackage'])

task createPom  {
  pom {
    project {
      groupId 'muddler'
      artifactId 'muddler'
      version project.version
      inceptionYear '2019'
    }
  }.writeTo("pom.xml")
}
